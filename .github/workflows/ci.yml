name: Build and test

on: [push, pull_request]

jobs:
  # These could be done with an OS-matrix, but I hope to one day activate a real crypto-backend
  # and then there need to be different installation paths for each OS
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Install Packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --release --features crypto_dummy --no-default-features

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features crypto_dummy --no-default-features -- --nocapture

  build-win:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --release --features crypto_dummy --no-default-features

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features crypto_dummy --no-default-features -- --nocapture

  build-mac:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          default: true
          override: true

      - name: Build for mac
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --release --features crypto_dummy --no-default-features

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features crypto_dummy --no-default-features -- --nocapture
